<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_SQLMode_ExecuteCommandWithData" Id="{74584bf1-55a4-4104-81df-d17cf35ad8f7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SQLMode_ExecuteCommandWithData
VAR_INPUT
	bExecute : BOOL ;
	hDBID : UINT ;
	sCommandSql : STRING(512) ;
END_VAR
VAR_OUTPUT
	bCommandOk : BOOL ;
	sError : STRING ;
    aReadStruct : ARRAY[1..10] OF ST_Database;	
END_VAR
VAR
    fbSqlDatabase : FB_SQLDatabaseEvt(sNetID := '', tTimeout := T#5S);
	fbSqlCommand : FB_SQLCommandEvt(sNetID := '', tTimeout := T#5S) ;
    tcMessage    : I_TcMessage;	
    fbSqlResult : FB_SQLResultEvt(sNetID:='', tTimeout    := T#5S); 	
	nState : INT ;
	fbPulse : R_TRIG ;
	bSqlResult : BOOL ;
	rParameter_old : REAL ;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbPulse(CLK:= bExecute, Q=> );

IF fbPulse.Q THEN
	nState := 1;		
END_IF

CASE nState OF
		
	0: ; //PARADO / IDLE / INTERRUMPIDO
		
	1: //INICIALIZA VARIAVEIS / START VARIABLES /  INICIALIZAR VARIABLES
		bCommandOk := FALSE ;
		sError := '' ;	
		rParameter_old := 0 ;			

		IF fbSqlDatabase.Disconnect() THEN
			IF fbSqlDatabase.bError THEN
				nState := 255;
			ELSE
				nState := 10;
			END_IF
		END_IF
	
	10: //ABRIR CONEXAO / OPEN CONECTION / CONEXION ABIERTA
	
		IF fbSqlDatabase.Connect(hDBID:= hDBID) THEN
			IF fbSqlDatabase.bError THEN
				nState := 210; 
			ELSE
				nState := 20; 
			END_IF
		END_IF
	
	20: //CRIAR COMANDO / CREATE COMMAND / CREAR COMANDO
	
		IF fbSqlDatabase.CreateCmd(ADR(fbSqlCommand)) THEN
			IF fbSqlDatabase.bError THEN
				nState := 220; 			
			ELSE
				nState := 30; 
			END_IF
		END_IF	
		
	30: //EXECUTA COMANDO / EXCUTE COMMAND / EJECUTAR COMANDO
	
		IF fbSqlCommand.ExecuteDataReturn(pSQLCmd:= ADR(sCommandSql), cbSQLCmd:= SIZEOF(sCommandSql), pSQLDBResult:= ADR(fbSqlResult)) THEN
			IF fbSQLCommand.bError THEN
				nState := 230; 				
				tcMessage := fbSQLCommand.ipTcResult;
			ELSE
				nState := 40; 
			END_IF
		END_IF
				
				
	40: //RECEBE OS DADOS / RECEIVE DATA / RECIBIR LOS DATOS
		bSqlResult := 	fbSqlResult.Read(nStartIndex:= 1,nRecordCount:= 10, pData:= ADR(aReadStruct), cbData:= SIZEOF(aReadStruct), bWithVerifying:= FALSE, bDataRelease:= TRUE) ;

		IF fbSqlResult.bError THEN
			nState := 240 ;
		ELSE
			nState := 50; 
		END_IF		

	
	50: //EXTRAI OS VALORES DO BUFFER / EXTRACT DATA FROM BUFFER
		fbSqlResult.Release();
			IF fbSqlResult.bError THEN
				nState := 250; 
			ELSE
				nState := 55; 
				sError := 'OK' ;
				bCommandOk := TRUE ;				
			END_IF
			
	55: //VERIFICA SE FORAM RETORNADOS DADOS / CHECK DATA RETURN		
		IF aReadStruct[1].parameter1 <>	rParameter_old THEN
			rParameter_old := aReadStruct[1].parameter1 ;
			nState := 60;
		ELSE
			nState := 20; 			 			
		END_IF
			
	60: //DESCONECTAR DO BANCO / DATABASE DISCONECT
		IF fbSqlDatabase.Disconnect() THEN
			IF fbSqlDatabase.bError THEN
				nState := 255;
			ELSE
				nState := 0;			
			END_IF
		END_IF
		
	210 : 
		sError := 'Error Connect' ;
		nState := 60;		
		bCommandOk := FALSE ;	
	220 : 
		sError := 'Error Create Command' ;	
		nState := 60;	
		bCommandOk := FALSE ;			
	230: 
		sError := 'Error Execute Command' ;	
		nState := 60;	
		bCommandOk := FALSE ;			
	240: 
		sError := 'Error Read' ;			
		nState := 60;	
		
	250:
		sError := 'Error Release' ;		
		nState := 60;	
		bCommandOk := FALSE ;			
	260: 				
		sError := 'Error Disconect' ;	
		nState := 60;	
		bCommandOk := FALSE ;				
END_CASE
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>